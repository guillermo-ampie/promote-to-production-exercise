version: 2.1
  

commands:
  delete_environment: 
    steps:
      - run: 
          name:  "Delete frontend environment"
          command: |
            export PIPELINE_ID=$(< ~/project/tmp/pipeline_id.txt)
            echo "Deleting stack: stack-${PIPELINE_ID}"
            aws s3 rm "s3://${PIPELINE_ID}" --recursive
            export TERM=ansi
            aws cloudformation delete-stack --stack-name "stack-${PIPELINE_ID}" 

  destroy_environment:
    steps:
      - run:
          name: "Rollback - deleting frontend environment"
          command: |
            aws s3 rm "s3://${CIRCLE_WORKFLOW_ID:0:7}" --recursive
            aws cloudformation delete-stack --stack-name "stack-${CIRCLE_WORKFLOW_ID:0:7}" 
          when: on_fail


jobs:
  create_and_deploy_frontend:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name "stack-${CIRCLE_WORKFLOW_ID:0:7}" \
            --parameter-overrides BUCKETNAME="${CIRCLE_WORKFLOW_ID:0:7}"
      - run: aws s3 sync . s3://"${CIRCLE_WORKFLOW_ID:0:7}" --delete --exclude ".*"

  smoke_tests:
    docker:
      - image: amazon/aws-cli
    steps:
      - run: |
          curl "FAKE_URL"
          # curl http://${CIRCLE_WORKFLOW_ID:0:7}.s3-website-${AWS_DEFAULT_REGION}.amazonaws.com
      - destroy_environment
          
  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          export TERM=ansi
          yum -y install tar gzip
          mkdir ~/project/tmp
          aws cloudformation \
          list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
          --no-paginate --output text > ~/project/tmp/pipeline_id.txt
          # TODO: Filter by tags
          echo "___PIPELINE_ID___"
          cat ~/project/tmp/pipeline_id.txt
          echo "___PIPELINE_ID___"
      - persist_to_workspace:
          root: ~/project/tmp
          paths:
            - pipeline_id.txt

  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name "cloudfront-dist" \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID:0:7}"

  cleanup_old_frontend:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          yum -y install tar gzip
      - attach_workspace:
          at: ~/project/tmp
      - delete_environment
 
      
workflows:
  default:
    jobs:
      - create_and_deploy_frontend
      - get_last_deployment_id:
          requires:
            - create_and_deploy_frontend
      - smoke_tests:
          requires:
            - get_last_deployment_id
      - promote_to_production:
          requires:
            - smoke_tests
      - cleanup_old_frontend:
          requires:
            - promote_to_production


    
